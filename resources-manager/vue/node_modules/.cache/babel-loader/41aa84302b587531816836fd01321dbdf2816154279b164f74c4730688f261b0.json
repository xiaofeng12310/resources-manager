{"ast":null,"code":"import \"core-js/modules/es.iterator.constructor.js\";\nimport \"core-js/modules/es.iterator.find.js\";\nimport \"core-js/modules/es.iterator.for-each.js\";\nimport \"core-js/modules/es.iterator.map.js\";\nexport default {\n  data() {\n    return {\n      user: JSON.parse(localStorage.getItem('xm-user') || {}),\n      trainingList: [],\n      // 可报名培训列表\n      myApplyList: [],\n      // 我的报名记录\n      allApplyList: [] // 所有报名记录（管理员）\n    };\n  },\n  methods: {\n    getStatusType(status) {\n      const statusMap = {\n        '已报名': 'warning',\n        '已通过': 'success',\n        '已拒绝': 'danger',\n        '已取消': 'info'\n      };\n      return statusMap[status] || 'info';\n    },\n    formatTime(row, column, cellValue) {\n      if (!cellValue) return '无';\n      const date = new Date(cellValue);\n      return date.toLocaleString('zh-CN', {\n        year: 'numeric',\n        month: '2-digit',\n        day: '2-digit',\n        hour: '2-digit',\n        minute: '2-digit',\n        second: '2-digit',\n        hour12: false\n      }).replace(/\\//g, '-').replace(/,/g, '');\n    },\n    loadTrainings() {\n      this.$request.get('/training').then(res => {\n        this.trainingList = res.data.map(item => ({\n          ...item,\n          applied: false,\n          status: '' // 初始化状态\n        }));\n        // 加载完成后同步报名状态\n        this.syncApplyStatus();\n      });\n    },\n    loadMyApply() {\n      this.$request.get('/training/apply/my').then(res => {\n        this.myApplyList = res.data || [];\n        this.syncApplyStatus();\n      }).catch(err => {\n        console.error('加载报名记录失败:', err);\n        this.$message.error('加载数据失败');\n      });\n    },\n    syncApplyStatus() {\n      this.trainingList.forEach(training => {\n        const apply = this.myApplyList.find(a => a.trainingId === training.id);\n        training.status = apply ? apply.status : '';\n        training.applied = !!apply;\n      });\n    },\n    loadAllApply() {\n      this.$request.get('/training/apply').then(res => {\n        this.allApplyList = res.data;\n      });\n    },\n    handleApply(row) {\n      this.$request.post('/training/apply', {\n        trainingId: row.id\n      }).then(() => {\n        this.$message.success('报名成功');\n        this.loadMyApply();\n      });\n    },\n    handleStatusChange(row) {\n      this.$request.put('/training/apply', row).then(() => {\n        this.$message.success('状态已更新');\n        this.loadAllApply();\n      });\n    },\n    handleCancel(id) {\n      this.$confirm('确认取消该报名？', '提示', {\n        type: 'warning'\n      }).then(() => {\n        this.$request.delete(`/training/apply/${id}`).then(() => {\n          this.$message.success('取消成功');\n          this.loadMyApply();\n          this.loadTrainings(); // 重新加载培训列表更新状态\n        });\n      });\n    }\n  },\n  mounted() {\n    this.loadTrainings();\n    if (this.user.role === 'ADMIN' || this.user.level === '主管') {\n      this.loadAllApply();\n    } else {\n      this.loadMyApply();\n    }\n  }\n};","map":{"version":3,"names":["data","user","JSON","parse","localStorage","getItem","trainingList","myApplyList","allApplyList","methods","getStatusType","status","statusMap","formatTime","row","column","cellValue","date","Date","toLocaleString","year","month","day","hour","minute","second","hour12","replace","loadTrainings","$request","get","then","res","map","item","applied","syncApplyStatus","loadMyApply","catch","err","console","error","$message","forEach","training","apply","find","a","trainingId","id","loadAllApply","handleApply","post","success","handleStatusChange","put","handleCancel","$confirm","type","delete","mounted","role","level"],"sources":["src/views/manager/TrainingApply.vue"],"sourcesContent":["<template>\r\n  <div class=\"container\">\r\n    <!-- 普通员工视图 -->\r\n    <template v-if=\"user.level === '员工'\">\r\n      <el-table :data=\"trainingList\" border stripe>\r\n        <el-table-column prop=\"name\" label=\"培训名称\"></el-table-column>\r\n        <el-table-column prop=\"time\" label=\"时间\" width=\"180\"></el-table-column>\r\n        <el-table-column prop=\"location\" label=\"地点\"></el-table-column>\r\n        <el-table-column label=\"状态\" width=\"200\">\r\n          <template slot-scope=\"scope\">\r\n            <div v-if=\"scope.row.status\">\r\n              <el-tag :type=\"getStatusType(scope.row.status)\" size=\"small\">\r\n                {{ scope.row.status }}\r\n              </el-tag>\r\n              <el-button\r\n                  v-if=\"scope.row.status === '已报名'\"\r\n                  type=\"danger\"\r\n                  size=\"mini\"\r\n                  @click=\"handleCancel(scope.row.id)\"\r\n                  style=\"margin-left: 10px\"\r\n              >取消</el-button>\r\n            </div>\r\n            <span v-else>无状态</span>\r\n          </template>\r\n        </el-table-column>\r\n      </el-table>\r\n\r\n      <!-- 我的报名记录 -->\r\n      <el-divider content-position=\"left\">我的报名记录</el-divider>\r\n      <el-table :data=\"myApplyList\" border>\r\n        <el-table-column prop=\"trainingName\" label=\"培训项目\"></el-table-column>\r\n        <el-table-column prop=\"applyTime\" label=\"报名时间\" width=\"180\" :formatter=\"formatTime\"></el-table-column>\r\n        <el-table-column label=\"状态\" width=\"150\">\r\n          <template slot-scope=\"scope\">\r\n            <el-tag :type=\"getStatusType(scope.row.status)\">\r\n              {{ scope.row.status }}\r\n            </el-tag>\r\n            <el-button\r\n                v-if=\"scope.row.status === '已报名'\"\r\n                type=\"danger\"\r\n                size=\"mini\"\r\n                @click=\"handleCancel(scope.row.id)\"\r\n                style=\"margin-left: 10px\"\r\n            >取消</el-button>\r\n          </template>\r\n        </el-table-column>\r\n      </el-table>\r\n    </template>\r\n\r\n    <!-- 管理员视图 -->\r\n    <template v-else-if=\"user.role === 'ADMIN' || user.level === '主管'\">\r\n      <el-table :data=\"allApplyList\">\r\n        <el-table-column prop=\"employeeName\" label=\"员工姓名\" />\r\n        <el-table-column prop=\"trainingName\" label=\"培训项目\" />\r\n        <el-table-column label=\"状态\">\r\n          <template slot-scope=\"scope\">\r\n            <el-select v-model=\"scope.row.status\" @change=\"handleStatusChange(scope.row)\">\r\n              <el-option label=\"已报名\" value=\"已报名\" />\r\n              <el-option label=\"已通过\" value=\"已通过\" />\r\n              <el-option label=\"已拒绝\" value=\"已拒绝\" />\r\n            </el-select>\r\n          </template>\r\n        </el-table-column>\r\n      </el-table>\r\n    </template>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  data() {\r\n    return {\r\n      user: JSON.parse(localStorage.getItem('xm-user') || {}),\r\n      trainingList: [],    // 可报名培训列表\r\n      myApplyList: [],    // 我的报名记录\r\n      allApplyList: []    // 所有报名记录（管理员）\r\n    }\r\n  },\r\n  methods: {\r\n    getStatusType(status) {\r\n      const statusMap = {\r\n        '已报名': 'warning',\r\n        '已通过': 'success',\r\n        '已拒绝': 'danger',\r\n        '已取消': 'info'\r\n      };\r\n      return statusMap[status] || 'info';\r\n    },\r\n\r\n    formatTime(row, column, cellValue) {\r\n      if (!cellValue) return '无';\r\n      const date = new Date(cellValue);\r\n      return date.toLocaleString('zh-CN', {\r\n        year: 'numeric',\r\n        month: '2-digit',\r\n        day: '2-digit',\r\n        hour: '2-digit',\r\n        minute: '2-digit',\r\n        second: '2-digit',\r\n        hour12: false\r\n      }).replace(/\\//g, '-').replace(/,/g, '');\r\n    },\r\n\r\n    loadTrainings() {\r\n      this.$request.get('/training').then(res => {\r\n        this.trainingList = res.data.map(item => ({\r\n          ...item,\r\n          applied: false,\r\n          status: '' // 初始化状态\r\n        }));\r\n        // 加载完成后同步报名状态\r\n        this.syncApplyStatus();\r\n      });\r\n    },\r\n\r\n    loadMyApply() {\r\n      this.$request.get('/training/apply/my').then(res => {\r\n        this.myApplyList = res.data || [];\r\n        this.syncApplyStatus();\r\n      }).catch(err => {\r\n        console.error('加载报名记录失败:', err);\r\n        this.$message.error('加载数据失败');\r\n      });\r\n    },\r\n\r\n    syncApplyStatus() {\r\n      this.trainingList.forEach(training => {\r\n        const apply = this.myApplyList.find(a => a.trainingId === training.id);\r\n        training.status = apply ? apply.status : '';\r\n        training.applied = !!apply;\r\n      });\r\n    },\r\n\r\n    loadAllApply() {\r\n      this.$request.get('/training/apply').then(res => {\r\n        this.allApplyList = res.data;\r\n      });\r\n    },\r\n\r\n    handleApply(row) {\r\n      this.$request.post('/training/apply', { trainingId: row.id }).then(() => {\r\n        this.$message.success('报名成功');\r\n        this.loadMyApply();\r\n      });\r\n    },\r\n\r\n    handleStatusChange(row) {\r\n      this.$request.put('/training/apply', row).then(() => {\r\n        this.$message.success('状态已更新');\r\n        this.loadAllApply();\r\n      });\r\n    },\r\n\r\n    handleCancel(id) {\r\n      this.$confirm('确认取消该报名？', '提示', { type: 'warning' }).then(() => {\r\n        this.$request.delete(`/training/apply/${id}`).then(() => {\r\n          this.$message.success('取消成功');\r\n          this.loadMyApply();\r\n          this.loadTrainings(); // 重新加载培训列表更新状态\r\n        });\r\n      });\r\n    }\r\n  },\r\n  mounted() {\r\n    this.loadTrainings();\r\n    if (this.user.role === 'ADMIN' || this.user.level === '主管') {\r\n      this.loadAllApply();\r\n    } else {\r\n      this.loadMyApply();\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.el-divider {\r\n  margin: 20px 0;\r\n}\r\n.el-table {\r\n  margin-top: 10px;\r\n}\r\n</style>"],"mappings":";;;;AAqEA;EACAA,KAAA;IACA;MACAC,IAAA,EAAAC,IAAA,CAAAC,KAAA,CAAAC,YAAA,CAAAC,OAAA;MACAC,YAAA;MAAA;MACAC,WAAA;MAAA;MACAC,YAAA;IACA;EACA;EACAC,OAAA;IACAC,cAAAC,MAAA;MACA,MAAAC,SAAA;QACA;QACA;QACA;QACA;MACA;MACA,OAAAA,SAAA,CAAAD,MAAA;IACA;IAEAE,WAAAC,GAAA,EAAAC,MAAA,EAAAC,SAAA;MACA,KAAAA,SAAA;MACA,MAAAC,IAAA,OAAAC,IAAA,CAAAF,SAAA;MACA,OAAAC,IAAA,CAAAE,cAAA;QACAC,IAAA;QACAC,KAAA;QACAC,GAAA;QACAC,IAAA;QACAC,MAAA;QACAC,MAAA;QACAC,MAAA;MACA,GAAAC,OAAA,aAAAA,OAAA;IACA;IAEAC,cAAA;MACA,KAAAC,QAAA,CAAAC,GAAA,cAAAC,IAAA,CAAAC,GAAA;QACA,KAAA1B,YAAA,GAAA0B,GAAA,CAAAhC,IAAA,CAAAiC,GAAA,CAAAC,IAAA;UACA,GAAAA,IAAA;UACAC,OAAA;UACAxB,MAAA;QACA;QACA;QACA,KAAAyB,eAAA;MACA;IACA;IAEAC,YAAA;MACA,KAAAR,QAAA,CAAAC,GAAA,uBAAAC,IAAA,CAAAC,GAAA;QACA,KAAAzB,WAAA,GAAAyB,GAAA,CAAAhC,IAAA;QACA,KAAAoC,eAAA;MACA,GAAAE,KAAA,CAAAC,GAAA;QACAC,OAAA,CAAAC,KAAA,cAAAF,GAAA;QACA,KAAAG,QAAA,CAAAD,KAAA;MACA;IACA;IAEAL,gBAAA;MACA,KAAA9B,YAAA,CAAAqC,OAAA,CAAAC,QAAA;QACA,MAAAC,KAAA,QAAAtC,WAAA,CAAAuC,IAAA,CAAAC,CAAA,IAAAA,CAAA,CAAAC,UAAA,KAAAJ,QAAA,CAAAK,EAAA;QACAL,QAAA,CAAAjC,MAAA,GAAAkC,KAAA,GAAAA,KAAA,CAAAlC,MAAA;QACAiC,QAAA,CAAAT,OAAA,KAAAU,KAAA;MACA;IACA;IAEAK,aAAA;MACA,KAAArB,QAAA,CAAAC,GAAA,oBAAAC,IAAA,CAAAC,GAAA;QACA,KAAAxB,YAAA,GAAAwB,GAAA,CAAAhC,IAAA;MACA;IACA;IAEAmD,YAAArC,GAAA;MACA,KAAAe,QAAA,CAAAuB,IAAA;QAAAJ,UAAA,EAAAlC,GAAA,CAAAmC;MAAA,GAAAlB,IAAA;QACA,KAAAW,QAAA,CAAAW,OAAA;QACA,KAAAhB,WAAA;MACA;IACA;IAEAiB,mBAAAxC,GAAA;MACA,KAAAe,QAAA,CAAA0B,GAAA,oBAAAzC,GAAA,EAAAiB,IAAA;QACA,KAAAW,QAAA,CAAAW,OAAA;QACA,KAAAH,YAAA;MACA;IACA;IAEAM,aAAAP,EAAA;MACA,KAAAQ,QAAA;QAAAC,IAAA;MAAA,GAAA3B,IAAA;QACA,KAAAF,QAAA,CAAA8B,MAAA,oBAAAV,EAAA,IAAAlB,IAAA;UACA,KAAAW,QAAA,CAAAW,OAAA;UACA,KAAAhB,WAAA;UACA,KAAAT,aAAA;QACA;MACA;IACA;EACA;EACAgC,QAAA;IACA,KAAAhC,aAAA;IACA,SAAA3B,IAAA,CAAA4D,IAAA,qBAAA5D,IAAA,CAAA6D,KAAA;MACA,KAAAZ,YAAA;IACA;MACA,KAAAb,WAAA;IACA;EACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}