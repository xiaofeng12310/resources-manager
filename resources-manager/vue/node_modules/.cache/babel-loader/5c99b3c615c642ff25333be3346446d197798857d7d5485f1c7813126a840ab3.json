{"ast":null,"code":"import \"core-js/modules/es.iterator.constructor.js\";\nimport \"core-js/modules/es.iterator.for-each.js\";\nimport \"core-js/modules/es.iterator.map.js\";\nimport \"core-js/modules/es.iterator.some.js\";\nexport default {\n  data() {\n    return {\n      user: JSON.parse(localStorage.getItem('xm-user') || {}),\n      // 这里修复了括号问题\n      trainingList: [],\n      // 可报名培训列表\n      myApplyList: [],\n      // 我的报名记录\n      allApplyList: [] // 所有报名记录（管理员）\n    };\n  },\n  methods: {\n    // 加载培训列表\n    loadTrainings() {\n      this.$request.get('/training').then(res => {\n        this.trainingList = res.data.map(item => ({\n          ...item,\n          applied: false // 需要后端接口判断\n        }));\n      });\n    },\n    // 加载我的报名\n    loadMyApply() {\n      this.$request.get('/training/apply/my').then(res => {\n        this.myApplyList = res.data;\n        // 标记已报名项目\n        this.trainingList.forEach(item => {\n          item.applied = this.myApplyList.some(a => a.trainingId === item.id);\n        });\n      });\n    },\n    // 加载所有报名（管理员）\n    loadAllApply() {\n      this.$request.get('/training/apply').then(res => {\n        this.allApplyList = res.data;\n      });\n    },\n    // 点击报名\n    handleApply(row) {\n      this.$request.post('/training/apply', {\n        trainingId: row.id\n      }).then(() => {\n        this.$message.success('报名成功');\n        this.loadMyApply();\n      });\n    },\n    // 状态变更（管理员）\n    handleStatusChange(row) {\n      this.$request.put('/training/apply', row).then(() => {\n        this.$message.success('状态已更新');\n      });\n    }\n  },\n  mounted() {\n    if (this.user.role === 'ADMIN' || this.user.level === '主管') {\n      this.loadAllApply(); // 加载主管部门数据\n    } else {\n      this.loadMyApply();\n    }\n  }\n};","map":{"version":3,"names":["data","user","JSON","parse","localStorage","getItem","trainingList","myApplyList","allApplyList","methods","loadTrainings","$request","get","then","res","map","item","applied","loadMyApply","forEach","some","a","trainingId","id","loadAllApply","handleApply","row","post","$message","success","handleStatusChange","put","mounted","role","level"],"sources":["src/views/manager/TrainingApply.vue"],"sourcesContent":["<template>\r\n  <div class=\"container\">\r\n    <!-- 普通员工视图 -->\r\n    <template v-if=\"user.level === '员工'\">\r\n      <el-table :data=\"trainingList\" border stripe>\r\n        <el-table-column prop=\"name\" label=\"培训名称\"></el-table-column>\r\n        <el-table-column prop=\"time\" label=\"时间\" width=\"180\"></el-table-column>\r\n        <el-table-column prop=\"location\" label=\"地点\"></el-table-column>\r\n        <el-table-column label=\"操作\" width=\"120\">\r\n          <template slot-scope=\"scope\">\r\n            <el-button\r\n                type=\"primary\"\r\n                size=\"mini\"\r\n                @click=\"handleApply(scope.row)\"\r\n                :disabled=\"scope.row.applied\"\r\n            >{{ scope.row.applied ? '已报名' : '报名' }}</el-button>\r\n          </template>\r\n        </el-table-column>\r\n      </el-table>\r\n\r\n      <!-- 我的报名记录 -->\r\n      <el-divider content-position=\"left\">我的报名记录</el-divider>\r\n      <el-table :data=\"myApplyList\" border>\r\n        <el-table-column prop=\"trainingName\" label=\"培训项目\"></el-table-column>\r\n        <el-table-column prop=\"applyTime\" label=\"报名时间\" width=\"180\"></el-table-column>\r\n        <el-table-column prop=\"status\" label=\"状态\" width=\"100\">\r\n          <template slot-scope=\"scope\">\r\n            <el-tag :type=\"scope.row.status === '已通过' ? 'success' : 'warning'\">\r\n              {{ scope.row.status }}\r\n            </el-tag>\r\n          </template>\r\n        </el-table-column>\r\n      </el-table>\r\n    </template>\r\n\r\n    <!-- 管理员视图 -->\r\n    <template v-else-if=\"user.role === 'ADMIN' || user.level === '主管'\">\r\n      <el-table :data=\"allApplyList\">\r\n        <el-table-column prop=\"employeeName\" label=\"员工姓名\" />\r\n        <el-table-column prop=\"trainingName\" label=\"培训项目\" />\r\n        <el-table-column label=\"状态\">\r\n          <template slot-scope=\"scope\">\r\n            <el-select v-model=\"scope.row.status\" @change=\"handleStatusChange(scope.row)\">\r\n              <el-option label=\"已报名\" value=\"已报名\" />\r\n              <el-option label=\"已通过\" value=\"已通过\" />\r\n              <el-option label=\"已拒绝\" value=\"已拒绝\" />\r\n            </el-select>\r\n          </template>\r\n        </el-table-column>\r\n      </el-table>\r\n    </template>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  data() {\r\n    return {\r\n      user: JSON.parse(localStorage.getItem('xm-user') || {}),  // 这里修复了括号问题\r\n      trainingList: [],    // 可报名培训列表\r\n      myApplyList: [],    // 我的报名记录\r\n      allApplyList: []    // 所有报名记录（管理员）\r\n    }\r\n  },\r\n  methods: {\r\n    // 加载培训列表\r\n    loadTrainings() {\r\n      this.$request.get('/training').then(res => {\r\n        this.trainingList = res.data.map(item => ({\r\n          ...item,\r\n          applied: false  // 需要后端接口判断\r\n        }))\r\n      })\r\n    },\r\n    // 加载我的报名\r\n    loadMyApply() {\r\n      this.$request.get('/training/apply/my').then(res => {\r\n        this.myApplyList = res.data\r\n        // 标记已报名项目\r\n        this.trainingList.forEach(item => {\r\n          item.applied = this.myApplyList.some(a => a.trainingId === item.id)\r\n        })\r\n      })\r\n    },\r\n    // 加载所有报名（管理员）\r\n    loadAllApply() {\r\n      this.$request.get('/training/apply').then(res => {\r\n        this.allApplyList = res.data\r\n      })\r\n    },\r\n    // 点击报名\r\n    handleApply(row) {\r\n      this.$request.post('/training/apply', { trainingId: row.id }).then(() => {\r\n        this.$message.success('报名成功')\r\n        this.loadMyApply()\r\n      })\r\n    },\r\n    // 状态变更（管理员）\r\n    handleStatusChange(row) {\r\n      this.$request.put('/training/apply', row).then(() => {\r\n        this.$message.success('状态已更新')\r\n      })\r\n    }\r\n  },\r\n  mounted() {\r\n    if (this.user.role === 'ADMIN' || this.user.level === '主管') {\r\n      this.loadAllApply(); // 加载主管部门数据\r\n    } else {\r\n      this.loadMyApply();\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.el-divider {\r\n  margin: 20px 0;\r\n}\r\n.el-table {\r\n  margin-top: 10px;\r\n}\r\n</style>"],"mappings":";;;;AAuDA;EACAA,KAAA;IACA;MACAC,IAAA,EAAAC,IAAA,CAAAC,KAAA,CAAAC,YAAA,CAAAC,OAAA;MAAA;MACAC,YAAA;MAAA;MACAC,WAAA;MAAA;MACAC,YAAA;IACA;EACA;EACAC,OAAA;IACA;IACAC,cAAA;MACA,KAAAC,QAAA,CAAAC,GAAA,cAAAC,IAAA,CAAAC,GAAA;QACA,KAAAR,YAAA,GAAAQ,GAAA,CAAAd,IAAA,CAAAe,GAAA,CAAAC,IAAA;UACA,GAAAA,IAAA;UACAC,OAAA;QACA;MACA;IACA;IACA;IACAC,YAAA;MACA,KAAAP,QAAA,CAAAC,GAAA,uBAAAC,IAAA,CAAAC,GAAA;QACA,KAAAP,WAAA,GAAAO,GAAA,CAAAd,IAAA;QACA;QACA,KAAAM,YAAA,CAAAa,OAAA,CAAAH,IAAA;UACAA,IAAA,CAAAC,OAAA,QAAAV,WAAA,CAAAa,IAAA,CAAAC,CAAA,IAAAA,CAAA,CAAAC,UAAA,KAAAN,IAAA,CAAAO,EAAA;QACA;MACA;IACA;IACA;IACAC,aAAA;MACA,KAAAb,QAAA,CAAAC,GAAA,oBAAAC,IAAA,CAAAC,GAAA;QACA,KAAAN,YAAA,GAAAM,GAAA,CAAAd,IAAA;MACA;IACA;IACA;IACAyB,YAAAC,GAAA;MACA,KAAAf,QAAA,CAAAgB,IAAA;QAAAL,UAAA,EAAAI,GAAA,CAAAH;MAAA,GAAAV,IAAA;QACA,KAAAe,QAAA,CAAAC,OAAA;QACA,KAAAX,WAAA;MACA;IACA;IACA;IACAY,mBAAAJ,GAAA;MACA,KAAAf,QAAA,CAAAoB,GAAA,oBAAAL,GAAA,EAAAb,IAAA;QACA,KAAAe,QAAA,CAAAC,OAAA;MACA;IACA;EACA;EACAG,QAAA;IACA,SAAA/B,IAAA,CAAAgC,IAAA,qBAAAhC,IAAA,CAAAiC,KAAA;MACA,KAAAV,YAAA;IACA;MACA,KAAAN,WAAA;IACA;EACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}